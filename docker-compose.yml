version: '3.8'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    env_file:
      - .env
    ports:
      - "3306:3306"
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot-app:
    build: .
    container_name: springboot-demo
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8006:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend-net
      - frontend-net

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - springboot-app
    networks:
      - frontend-net

  # myservice:
  #   image: myimage
  #   security_opt:
  #     - seccomp=unconfined

networks:
  backend-net:
    driver: bridge
  frontend-net:
    driver: bridge
